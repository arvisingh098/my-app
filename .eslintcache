[{"C:\\Users\\abc\\Desktop\\my-app\\src\\index.js":"1","C:\\Users\\abc\\Desktop\\my-app\\src\\App.js":"2","C:\\Users\\abc\\Desktop\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\abc\\Desktop\\my-app\\src\\routes\\index.js":"4","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\SecondPage\\index.js":"5","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Main\\index.js":"6","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Navbar\\index.js":"7","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Third\\index.js":"8","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Card\\index.js":"9","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Tabs\\index.js":"10","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Tabs\\tabpanel.js":"11","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Utils\\utils.js":"12"},{"size":651,"mtime":1609578214000,"results":"13","hashOfConfig":"14"},{"size":333,"mtime":1609578246000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":811,"mtime":1611776713301,"results":"17","hashOfConfig":"14"},{"size":3020,"mtime":1609670184000,"results":"18","hashOfConfig":"14"},{"size":621,"mtime":1611774890861,"results":"19","hashOfConfig":"14"},{"size":1778,"mtime":1611948439954,"results":"20","hashOfConfig":"14"},{"size":787,"mtime":1611776309434,"results":"21","hashOfConfig":"14"},{"size":585,"mtime":1609516790000,"results":"22","hashOfConfig":"14"},{"size":10030,"mtime":1612027229825,"results":"23","hashOfConfig":"14"},{"size":695,"mtime":1609573050000,"results":"24","hashOfConfig":"14"},{"size":9719,"mtime":1612026477089,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"po7bs5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},"C:\\Users\\abc\\Desktop\\my-app\\src\\index.js",["58","59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["60","61"],"C:\\Users\\abc\\Desktop\\my-app\\src\\App.js",["62","63","64","65"],"import './App.css';\nimport NavBar from './components/Navbar';\nimport Main from './components/Main';\nimport SecondPage from './components/SecondPage';\nimport Third from './components/Third';\nimport Routers from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routers/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\abc\\Desktop\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\abc\\Desktop\\my-app\\src\\routes\\index.js",["66"],"import React, { Component } from 'react';\r\nimport { Route, Link, Switch, Redirect } from \"react-router-dom\";\r\nimport Main from '../components/Main';\r\nimport NavBar from '../components/Navbar';\r\nimport SecondPage from '../components/SecondPage';\r\nimport Third from '../components/Third';\r\nclass Routers extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <NavBar/>\r\n                <Switch>\r\n                    \r\n                    <Route path = '/geyser' component = {SecondPage}/>\r\n                    <Route path = '/dashboard' component = {Third}/>\r\n                    <Route path = '/' component = {Main}/>\r\n                    <Redirect to = '/'/>\r\n                </Switch>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Routers;","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\SecondPage\\index.js",[],"C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Main\\index.js",[],"C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Navbar\\index.js",["67","68","69","70","71","72","73","74"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../logo.png';\r\nimport { connect, getTokenBalance, getEthBalance } from '../Utils/utils';\r\nconst wethAbi = require('../Utils/abis/Weth.json');\r\nconst maskAbi = require('../Utils/abis/MASK.json');\r\n\r\nfunction NavBar() {\r\n\r\n    const [value, setValue] = useState(\"Connect\");\r\n      \r\n  const connectWeb3 = async () => {\r\n    const address = await connect();\r\n    if(address == false)\r\n    {\r\n        setValue(\"Connect\");\r\nreturn;\r\n    } \r\n           setValue(\"Connected\");\r\n  };\r\n\r\n   \r\n        return (  \r\n            <nav className=\"navbar navbar-expand-lg\">\r\n                <Link className=\"navbar-brand\" to=\"#\">\r\n                    <img src = {logo} className = 'logo'/>\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link mr-2 btn btn-primary text-white btn-sm\" to=\"/dashboard\">Dashboard</Link>\r\n                            </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link btn btn-primary text-white btn-sm\" onClick={connectWeb3}>{value}</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n}\r\nexport default NavBar;","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Third\\index.js",["75","76","77","78","79","80","81"],"import React, { Component } from 'react';\r\nimport Cards from '../Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box, Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport Tabse from '../Tabs';\r\n\r\nclass Third extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className = 'container' style = {{height:600}}>\r\n                <div className = 'd-flex justify-content-center align-items-center m-3'>\r\n                    <div className = 'card' style = {{width:\"60%\"}}>\r\n                        <div className=\"card-body\">\r\n                            <Tabse/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Third;","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Card\\index.js",[],"C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Tabs\\index.js",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"import React, { Component, useState, useEffect } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from './tabpanel';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { connect, getTokenBalance, getAmountsIn, swapContract, getEthBalance, addLiquidityContract, getQuota, removeLiquidityContract } from '../Utils/utils';\r\nconst wethAbi = require('../Utils/abis/Weth.json');\r\nconst maskAbi = require('../Utils/abis/MASK.json');\r\nconst pairAbi = require('../Utils/abis/UPair.json');\r\n\r\nfunction Tabse() {\r\n   const [value, setValue] = useState(0);\r\n   const [inputSEValue, setInputSEValue] = useState(0);\r\n   const [inputSESWAPValue, setInputSESWAPValue] = useState(0);\r\n   const [inputSMValue, setInputSMValue] = useState(0);\r\n   const [inputSMSWAPValue, setInputSMSWAPValue] = useState(0);\r\n   const [inputAEValue, setInputAEValue] = useState(0);\r\n   const [inputAESWAPValue, setInputAESWAPValue] = useState(0);\r\n   const [inputAMValue, setInputAMValue] = useState(0);\r\n   const [inputAMSWAPValue, setInputAMSWAPValue] = useState(0);\r\n   const [inputREValue, setInputREValue] = useState(0);\r\n   const [inputRMValue, setInputRMValue] = useState(0);\r\n   const pow = 1000000000000000000;\r\n\r\n   const [balanceETHToken, setBalanceETHToken] = useState(0);\r\n   const [balanceMaskToken, setBalanceMaskToken] = useState(0);\r\n   const [balanceLiquidityToken, setBalanceLiquidityToken] = useState(0);\r\nuseEffect(() => {\r\n    let isCancelled = false;\r\n\r\n    async function updateUserInfo() {\r\n      const [\r\n        ethBalance,\r\n        maskBalance,\r\n        balLiquidity\r\n      ] = await Promise.all([\r\n        getEthBalance(),\r\n        getTokenBalance(\"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\" ,maskAbi),\r\n        getTokenBalance(\"0x53d7833ac8a9610e1ef38a3961ab6860b6f591a1\" ,pairAbi)\r\n      ]);\r\n\r\n       setBalanceETHToken(ethBalance);\r\n       setBalanceMaskToken(maskBalance);\r\n        setBalanceLiquidityToken(balLiquidity);\r\n    }\r\n    updateUserInfo();\r\n    const id = setInterval(updateUserInfo, 1000);\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return () => {\r\n      isCancelled = true;\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n\r\n     \r\n     const handleChange = (event, value)=> {\r\n    setValue(value);\r\n  };\r\n\r\n   const onHandleChangesEthAmount = async (event, value)=> {\r\n    let ethAmount = event.target.value;\r\n        var rgx = /^[0-9]*\\.?[0-9]*$/;\r\n        if((ethAmount.match(rgx) == null))\r\n        {\r\n         setInputSEValue(0);\r\n         setInputSESWAPValue(0);\r\n        }else {\r\n            setInputSEValue(ethAmount);\r\n            let aa = Math.round(ethAmount * 1000000000000000000);\r\n            setInputSESWAPValue(ethAmount);\r\n            let amount1 = await getAmountsIns(ethAmount, 1);\r\n            let amount = amount1[1] / pow;\r\n            setInputSMValue(amount.toFixed(18));\r\n            // console.log(amount1);\r\n            setInputSMSWAPValue(amount1[1]);\r\n        }\r\n    };\r\n\r\n    const onHandleChangeSMAmount = async (event, value)=> {\r\n    let ethAmount = event.target.value;\r\n        var rgx = /^[0-9]*\\.?[0-9]*$/;\r\n        if((ethAmount.match(rgx) == null))\r\n        {\r\n         setInputSMValue(0);\r\n         setInputSMSWAPValue(0);\r\n        }else {\r\n            setInputSMValue(ethAmount);\r\n            let aa = Math.round(ethAmount * 1000000000000000000);\r\n            setInputSMSWAPValue(ethAmount);\r\n            let amount2 = await getAmountsIns(ethAmount, 2);\r\n    let amount = amount2[0] / pow;\r\n            setInputSEValue(amount.toFixed(18));\r\n            // console.log(amount2);\r\n            setInputSESWAPValue(amount2[0]);\r\n        }\r\n    };\r\n\r\n    const onHandleChangeAEAmount = async (event, value)=> {\r\n       let ethAmount = event.target.value;\r\n        var rgx = /^[0-9]*\\.?[0-9]*$/;\r\n        if((ethAmount.match(rgx) == null))\r\n        {\r\n         setInputAEValue(0);\r\n          setInputAESWAPValue(0);\r\n        }else {\r\n            setInputAEValue(ethAmount);\r\n            let aa = Math.round(ethAmount * 1000000000000000000);\r\n             setInputAESWAPValue(aa);\r\n            let AMAmount = await getQuotas(ethAmount, 1);\r\n            let main = AMAmount;\r\n            AMAmount = AMAmount / pow;\r\n            setInputAMValue(AMAmount.toFixed(18));\r\n            setInputAMSWAPValue(main);\r\n        }\r\n    };\r\n\r\n    const onHandleChangeAMAmount = async (event, value)=> {\r\n       let ethAmount = event.target.value;\r\n       var rgx = /^[0-9]*\\.?[0-9]*$/;\r\n        if((ethAmount.match(rgx) == null))\r\n        {\r\n    setInputAMValue(0);\r\n     setInputAMSWAPValue(0);\r\n    }else {\r\n         setInputAMValue(ethAmount);\r\n         let aa = Math.round(ethAmount * 1000000000000000000);\r\n          setInputAMSWAPValue(aa);\r\n        let AEAmount = await getQuotas(ethAmount, 2);\r\n           \r\n            let main = AEAmount;\r\n            AEAmount = AEAmount / pow;\r\n             setInputAEValue(AEAmount.toFixed(18));\r\n setInputAESWAPValue(main);\r\n        }\r\n    };\r\n\r\n    const onHandleChangeRMAmount = (event, value)=> {\r\n       let ethAmount = event.target.value;\r\n       if(balanceLiquidityToken < (ethAmount * pow))\r\n       {\r\n           alert(\"Invalid Liquidity Amount\");\r\n       } else {\r\n           setInputRMValue(ethAmount);\r\n       }\r\n\r\n    };\r\n\r\n const addLiquidity = async () => {\r\n   let inputAESWAPValue1 = inputAESWAPValue;\r\n   let inputAMSWAPValue1 = inputAMSWAPValue;\r\n    if(inputAESWAPValue.toString().indexOf('.') !== -1)\r\n    inputAESWAPValue1 = Math.round(inputAESWAPValue * 1000000000000000000);\r\n    if(inputAMSWAPValue.toString().indexOf('.') !== -1)\r\n    inputAMSWAPValue1 = Math.round(inputAMSWAPValue * 1000000000000000000);\r\n     console.log(inputAESWAPValue);\r\n    console.log(inputAESWAPValue1);\r\n    console.log(inputAMSWAPValue);\r\n    console.log(inputAMSWAPValue1);\r\n    const liquidity = await addLiquidityContract(inputAESWAPValue1, inputAMSWAPValue1);\r\n  };\r\n\r\n   const swapLiquidity = async () => {\r\n    let inputSESWAPValue1 = inputSESWAPValue;\r\n    let inputSMSWAPValue1 = inputSMSWAPValue;\r\n    if(inputSESWAPValue.toString().indexOf('.') !== -1)\r\n    inputSESWAPValue1 = Math.round(inputSESWAPValue * 1000000000000000000);\r\n    if(inputSMSWAPValue.toString().indexOf('.') !== -1)\r\n    inputSMSWAPValue1 = Math.round(inputSMSWAPValue * 1000000000000000000);\r\n\r\n    console.log(inputSESWAPValue);\r\n    console.log(inputSESWAPValue1);\r\n    console.log(inputSMSWAPValue);\r\n    console.log(inputSMSWAPValue1);\r\n    const liquidity = await swapContract(inputSESWAPValue1, inputSMSWAPValue1);\r\n  };\r\n\r\n   const removeLiquidity = async () => {\r\n    const removeLiquidity = await removeLiquidityContract(inputRMValue);\r\n  };\r\n\r\n  const getQuotas = async (inputValue, status) => {\r\n    let quota = await getQuota(inputValue, status);\r\n    console.log(quota);\r\n    return quota;\r\n  };\r\n\r\n  const getAmountsIns = async (inputValue, status) => {\r\n    let amount = await getAmountsIn(inputValue, status);\r\n    console.log(amount);\r\n    return amount;\r\n  };\r\n\r\n  const onHandleChangeREAmount = (event, value)=> {\r\n       let ethAmount = event.target.value;\r\n    setInputREValue(ethAmount);\r\n  };\r\n\r\n        return (\r\n            <div>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                 >\r\n                    <Tab label=\"Swap\" value = {0} index = {0}/>\r\n                    <Tab label=\"Add Liquidity\" value = {1} index = {1}/>\r\n                    <Tab label=\"Remove Liquidity\" value = {2} index = {2}/>\r\n                </Tabs>\r\n                <TabPanel value = {value} index = {0}>\r\n                <label style={{color: \"black\"}}> Eth Amount :- {balanceETHToken} </label>\r\n                    <input placeholder = 'Swap ETH Amount' className = 'form-control' value={inputSEValue}\r\n                    onChange={onHandleChangesEthAmount}/>\r\n                    <br/>\r\n                    <label style={{color: \"black\"}}> Mask Amount :- {balanceMaskToken / pow} </label>\r\n                    <input placeholder = 'Swap MASK Amount' className = 'form-control' value={inputSMValue}\r\n                    onChange={onHandleChangeSMAmount}/>\r\n                    <br/>\r\n                    <button className = 'btn btn-primary btn-lg btn-block' onClick={swapLiquidity}>Swap</button>\r\n                </TabPanel>\r\n                <TabPanel value = {value} index = {1}>\r\n                <label style={{color: \"black\"}}> Eth Amount :- {balanceETHToken} </label>\r\n                <input placeholder = 'Add ETH Amount' className = 'form-control' value={inputAEValue}\r\n                    onChange={onHandleChangeAEAmount}/>\r\n                    <br/>\r\n                    <label style={{color: \"black\"}}> Mask Amount :- {balanceMaskToken / pow} </label>\r\n                    <input placeholder = 'Add MASK Amount' className = 'form-control' value={inputAMValue}\r\n                    onChange={onHandleChangeAMAmount}/>\r\n                    <br/>\r\n                    <button className = 'btn btn-primary btn-lg btn-block' onClick={addLiquidity}>Add Liquidity</button>\r\n                    <br/>\r\n                    <label style={{color: \"black\"}}> Liquidity Amount :- {balanceLiquidityToken / pow} </label>\r\n                </TabPanel>\r\n                <TabPanel value = {value} index = {2}>\r\n                    <input placeholder = 'Remove Liquidity Amount' className = 'form-control' value={inputRMValue}\r\n                    onChange={onHandleChangeRMAmount}/>\r\n                    <br/>\r\n                    <button className = 'btn btn-primary btn-lg btn-block' onClick={removeLiquidity}>Remove Liquidity</button>\r\n                    <br/>\r\n                    <label style={{color: \"black\"}}> Liquidity Amount :- {balanceLiquidityToken / pow} </label>\r\n                </TabPanel>\r\n            </div>\r\n          );\r\n    \r\n}\r\n \r\nexport default Tabse;","C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Tabs\\tabpanel.js",[],"C:\\Users\\abc\\Desktop\\my-app\\src\\components\\Utils\\utils.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\nconst pairAbi = require('./abis/UPair.json');\r\nconst routerAbi = require('./abis/URouter.json');\r\nconst factoryAbi = require('./abis/UFactory.json');\r\nconst wethAbi = require('./abis/Weth.json');\r\nconst maskAbi = require('./abis/MASK.json');\r\n\r\nlet account = '';\r\n\r\nexport const connect = async () => {\r\n  window.web3 = new Web3(window.ethereum);\r\n  let addresses = await window.web3.eth.getAccounts();\r\n  if (!addresses.length) {\r\n    try {\r\n      addresses = await window.ethereum.enable();\r\n    } catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  }\r\n  if(addresses.length > 0)\r\n  {\r\n    account = addresses[0].toLowerCase();\r\n  }\r\n  return addresses.length ? addresses[0].toLowerCase() : null;\r\n};\r\n\r\nlet web3;\r\n// eslint-disable-next-line no-undef\r\nif (window.ethereum !== undefined) {\r\n  // eslint-disable-next-line no-undef\r\n  web3 = new Web3(ethereum);\r\n}\r\n\r\n// eslint-disable-next-line consistent-return\r\nexport const checkConnectedAndGetAddress = async () => {\r\n  let addresses = await window.web3.eth.getAccounts();\r\n  if (!addresses.length) {\r\n    try {\r\n      addresses = await window.ethereum.enable();\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) { }\r\n  }\r\n\r\n  return addresses[0];\r\n};\r\n\r\nexport const getEthBalance = async() => {\r\n  if (account === '') return '0';\r\n  let balanceEth = 0;\r\nawait web3.eth.getBalance(account, (err, balance) => {balanceEth = web3.utils.fromWei(balance)});\r\nreturn balanceEth;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} token address\r\n * @param {string} account address\r\n * @return {Promise<string>}\r\n */\r\nexport const getTokenBalance = async (token, abi) => {\r\n  if (account === '') return '0';\r\n  const tokenContract = new web3.eth.Contract(abi, token);\r\n  return tokenContract.methods.balanceOf(account).call();\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} token\r\n * @param {string} account\r\n * @param {string} spender\r\n * @return {Promise<string>}\r\n */\r\nexport const getTokenAllowance = async (token, account, spender, abi) => {\r\n  const tokenContract = new web3.eth.Contract(abi, token);\r\n  return tokenContract.methods.allowance(account, spender).call();\r\n};\r\n\r\nexport const getQuota = async (inputAEValue, status) => {\r\n  var rgx = /^[0-9]*\\.?[0-9]*$/; \r\n  if((inputAEValue.match(rgx) == null || inputAEValue == 0))\r\n  return '0';\r\n  inputAEValue = inputAEValue * 1000000000000000000;\r\n  inputAEValue = Math.round(inputAEValue);\r\n  const tokenContract1 = new web3.eth.Contract(factoryAbi, \"0x4a3D2a766817c1498051F7ceB0D8fcfa7fedCD6f\");\r\n  const pair = await tokenContract1.methods.getPair(\"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\", \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\").call();\r\n  if(pair == \"0x0000000000000000000000000000000000000000\")\r\n  return '0';\r\n  const tokenContract2 = new web3.eth.Contract(pairAbi, \"0x53d7833ac8a9610e1ef38a3961ab6860b6f591a1\");\r\n  const reserve = await tokenContract2.methods.getReserves().call();\r\n  const tokenContract = new web3.eth.Contract(routerAbi, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\");\r\n  const reserve1 = reserve._reserve1;\r\n  const reserve0 = reserve._reserve0;\r\n  if(status == 1)\r\n  return tokenContract.methods.quote(new BigNumber(inputAEValue), new BigNumber(reserve1), new BigNumber(reserve0)).call();\r\n  if(status == 2)\r\n  return tokenContract.methods.quote(new BigNumber(inputAEValue), new BigNumber(reserve0), new BigNumber(reserve1)).call();\r\n};\r\n\r\nexport const getAmountsIn = async (inputAEValue, status) => {\r\n  var rgx = /^[0-9]*\\.?[0-9]*$/; \r\n  if((inputAEValue.match(rgx) == null || inputAEValue == 0))\r\n  return '0';\r\n  inputAEValue = inputAEValue * 1000000000000000000;\r\n  inputAEValue = Math.round(inputAEValue);\r\n  const tokenContract1 = new web3.eth.Contract(factoryAbi, \"0x4a3D2a766817c1498051F7ceB0D8fcfa7fedCD6f\");\r\n  const pair = await tokenContract1.methods.getPair(\"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\", \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\").call();\r\n  if(pair == \"0x0000000000000000000000000000000000000000\")\r\n  return '0';\r\n  const tokenContract = new web3.eth.Contract(routerAbi, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\");\r\n  \r\n  if(status == 1)\r\n  return tokenContract.methods.getAmountsOut( new BigNumber(inputAEValue), [\"0xd0a1e359811322d97991e03f863a0c30c2cf029c\", \"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\"]).call();\r\n  if(status == 2)\r\n  return tokenContract.methods.getAmountsIn( new BigNumber(inputAEValue), [\"0xd0a1e359811322d97991e03f863a0c30c2cf029c\", \"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\"]).call();\r\n};\r\n\r\nexport const addLiquidityContract = async (inputAEValue, inputAMValue) => {\r\n  var rgx = /^[0-9]*\\.?[0-9]*$/; \r\n  if((inputAEValue == null))\r\n  return '0';\r\n  if (account === '') return '0';\r\n  const maskAllowance = await getTokenAllowance(\"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\", account, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\", maskAbi);\r\n  if(maskAllowance < inputAMValue)\r\n  {\r\n    const oToken = new window.web3.eth.Contract(maskAbi, \"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\");\r\n    await oToken.methods\r\n    .approve(\"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\", \"100000000000000000000000000000000\")\r\n    .send({ from: account })\r\n    .on('transactionHash', (hash) => {\r\n      console.log(hash);\r\n    });\r\n  }\r\n\r\n  let mainMask = await nonExpon(inputAMValue);\r\n  let main95Mask = await nonExpon(Math.round(inputAMValue * 95 / 100));\r\n  let mainEth = await nonExpon(inputAEValue);\r\n  let main95Eth = await nonExpon(Math.round(inputAEValue * 95 / 100));\r\n\r\n  const oToken1 = new window.web3.eth.Contract(routerAbi, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\");\r\n  await oToken1.methods\r\n    .addLiquidityETH(\"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\", mainMask.toString(), main95Mask.toString(), main95Eth.toString(), account, Math.round((new Date()).getTime() / 1000)+1000)\r\n    .send({ from: account, value:   new BigNumber(mainEth) })\r\n    .on('transactionHash', (hash) => {\r\n      console.log(hash);\r\n    });\r\n};\r\n\r\n\r\nexport const removeLiquidityContract = async (inputAEValue) => {\r\n  var rgx = /^[0-9]*\\.?[0-9]*$/; \r\n  if((inputAEValue.match(rgx) == null))\r\n  return '0';\r\n  inputAEValue = inputAEValue * 1000000000000000000;\r\n  inputAEValue = Math.round(inputAEValue);\r\n  if (account === '') return '0';\r\n  const maskAllowance = await getTokenAllowance(\"0x53d7833ac8a9610e1ef38a3961ab6860b6f591a1\", account, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\", pairAbi);\r\n  if(maskAllowance < inputAEValue)\r\n  {\r\n    const oToken = new window.web3.eth.Contract(pairAbi, \"0x53d7833ac8a9610e1ef38a3961ab6860b6f591a1\");\r\n    await oToken.methods\r\n    .approve(\"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\", \"100000000000000000000000000000000\")\r\n    .send({ from: account })\r\n    .on('transactionHash', (hash) => {\r\n      console.log(hash);\r\n    });\r\n  }\r\n\r\n   let mainEth = await nonExpon(inputAEValue);\r\n  console.log(mainEth);\r\n  const oToken1 = new window.web3.eth.Contract(routerAbi, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\");\r\n  await oToken1.methods\r\n    .removeLiquidityETH(\"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\", mainEth.toString(), (new BigNumber(0)), (new BigNumber(0)), account, Math.round((new Date()).getTime() / 1000)+1000)\r\n    .send({ from: account })\r\n    .on('transactionHash', (hash) => {\r\n      console.log(hash);\r\n    });\r\n};\r\n\r\nexport const swapContract = async (inputAEValue, inputRMValue) => {\r\n  var rgx = /^[0-9]*\\.?[0-9]*$/; \r\nif((inputAEValue == 0) || inputRMValue == 0)\r\n  return '0';  \r\n  if (account === '') return '0';\r\n  const maskAllowance = await getTokenAllowance(\"0x53d7833ac8a9610e1ef38a3961ab6860b6f591a1\", account, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\", pairAbi);\r\n  if(maskAllowance < inputAEValue)\r\n  {\r\n    const oToken = new window.web3.eth.Contract(maskAbi, \"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\");\r\n    await oToken.methods\r\n    .approve(\"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\", \"100000000000000000000000000000000\")\r\n    .send({ from: account })\r\n    .on('transactionHash', (hash) => {\r\n      console.log(hash);\r\n    });\r\n  }\r\n\r\n  let mainMask = await nonExpon(inputRMValue);\r\n  let mainEth = await nonExpon(inputAEValue);\r\n\r\n  const oToken1 = new window.web3.eth.Contract(routerAbi, \"0x44da2893eB4AEf2ed28fE2a333f4e9BF7949d92C\");\r\n  await oToken1.methods\r\n    .swapExactETHForTokens(mainMask.toString(), [\"0xd0a1e359811322d97991e03f863a0c30c2cf029c\", \"0x554c84c3b44b26d365bb43f9f689b68d5a9edcd5\"], account, Math.round((new Date()).getTime() / 1000)+1000)\r\n    .send({ from: account, value:  new BigNumber(mainEth)})\r\n    .on('transactionHash', (hash) => {\r\n      console.log(hash);\r\n    });\r\n};\r\n\r\nexport const nonExpon = async (n) => {\r\nvar sign = +n < 0 ? \"-\" : \"\",\r\n            toStr = n.toString();\r\n    if(n.toString().indexOf('.') !== -1)\r\n    {\r\n        var [lead,decimal,pow] = n.toString()\r\n            .replace(/^-/,\"\")\r\n            .replace(/^([0-9]+)(e.*)/,\"$1.$2\")\r\n            .split(/e|\\./);\r\n        return  +pow < 0 \r\n            ? sign + \"0.\" + \"0\".repeat(Math.max(Math.abs(pow)-1 || 0, 0)) + lead + decimal\r\n            : sign + lead + (+pow >= decimal.length ? (decimal + \"0\".repeat(Math.max(+pow-decimal.length || 0, 0))) : (decimal.slice(0,+pow)+\".\"+decimal.slice(+pow)))\r\n    } else {\r\n      return n;\r\n    }\r\n}\r\n\r\n/**\r\n * ERC20 Utilities\r\n */\r\n\r\n// export const approve = async (tokenAddr, spender, amt = UINT256_MAX) => {\r\n//   const account = await checkConnectedAndGetAddress();\r\n//   const oToken = new window.web3.eth.Contract(testnetUSDCAbi, tokenAddr);\r\n//   await oToken.methods\r\n//     .approve(spender, amt)\r\n//     .send({ from: account })\r\n//     .on('transactionHash', (hash) => {\r\n//       notify.hash(hash);\r\n//     });\r\n// };",{"ruleId":"111","severity":1,"message":"112","line":7,"column":25,"nodeType":"113","messageId":"114","endLine":7,"endColumn":30},{"ruleId":"111","severity":1,"message":"115","line":7,"column":32,"nodeType":"113","messageId":"114","endLine":7,"endColumn":36},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"111","severity":1,"message":"120","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"121","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":12},{"ruleId":"111","severity":1,"message":"122","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"123","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":2,"column":17,"nodeType":"113","messageId":"114","endLine":2,"endColumn":21},{"ruleId":"111","severity":1,"message":"124","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"125","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":47},{"ruleId":"111","severity":1,"message":"126","line":4,"column":19,"nodeType":"113","messageId":"114","endLine":4,"endColumn":34},{"ruleId":"111","severity":1,"message":"127","line":4,"column":36,"nodeType":"113","messageId":"114","endLine":4,"endColumn":49},{"ruleId":"111","severity":1,"message":"128","line":5,"column":7,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"129","line":6,"column":7,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":14,"column":16,"nodeType":"132","messageId":"133","endLine":14,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":26,"column":21,"nodeType":"136","endLine":26,"endColumn":59},{"ruleId":"111","severity":1,"message":"137","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"111","severity":1,"message":"138","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"139","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"140","line":4,"column":15,"nodeType":"113","messageId":"114","endLine":4,"endColumn":19},{"ruleId":"111","severity":1,"message":"141","line":4,"column":21,"nodeType":"113","messageId":"114","endLine":4,"endColumn":32},{"ruleId":"111","severity":1,"message":"142","line":4,"column":34,"nodeType":"113","messageId":"114","endLine":4,"endColumn":38},{"ruleId":"111","severity":1,"message":"143","line":4,"column":40,"nodeType":"113","messageId":"114","endLine":4,"endColumn":50},{"ruleId":"111","severity":1,"message":"124","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"140","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"141","line":5,"column":16,"nodeType":"113","messageId":"114","endLine":5,"endColumn":27},{"ruleId":"111","severity":1,"message":"142","line":5,"column":29,"nodeType":"113","messageId":"114","endLine":5,"endColumn":33},{"ruleId":"111","severity":1,"message":"143","line":5,"column":35,"nodeType":"113","messageId":"114","endLine":5,"endColumn":45},{"ruleId":"111","severity":1,"message":"144","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":17},{"ruleId":"111","severity":1,"message":"128","line":7,"column":7,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"111","severity":1,"message":"145","line":21,"column":11,"nodeType":"113","messageId":"114","endLine":21,"endColumn":23},{"ruleId":"111","severity":1,"message":"146","line":51,"column":7,"nodeType":"113","messageId":"114","endLine":51,"endColumn":18},{"ruleId":"111","severity":1,"message":"147","line":70,"column":17,"nodeType":"113","messageId":"114","endLine":70,"endColumn":19},{"ruleId":"111","severity":1,"message":"147","line":89,"column":17,"nodeType":"113","messageId":"114","endLine":89,"endColumn":19},{"ruleId":"111","severity":1,"message":"148","line":160,"column":11,"nodeType":"113","messageId":"114","endLine":160,"endColumn":20},{"ruleId":"111","severity":1,"message":"148","line":175,"column":11,"nodeType":"113","messageId":"114","endLine":175,"endColumn":20},{"ruleId":"111","severity":1,"message":"149","line":179,"column":11,"nodeType":"113","messageId":"114","endLine":179,"endColumn":26},{"ruleId":"111","severity":1,"message":"150","line":194,"column":9,"nodeType":"113","messageId":"114","endLine":194,"endColumn":31},{"ruleId":"111","severity":1,"message":"128","line":6,"column":7,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":82,"column":55,"nodeType":"132","messageId":"133","endLine":82,"endColumn":57},{"ruleId":"130","severity":1,"message":"131","line":88,"column":11,"nodeType":"132","messageId":"133","endLine":88,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":95,"column":13,"nodeType":"132","messageId":"133","endLine":95,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":97,"column":13,"nodeType":"132","messageId":"133","endLine":97,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":103,"column":55,"nodeType":"132","messageId":"133","endLine":103,"endColumn":57},{"ruleId":"130","severity":1,"message":"131","line":109,"column":11,"nodeType":"132","messageId":"133","endLine":109,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":113,"column":13,"nodeType":"132","messageId":"133","endLine":113,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":115,"column":13,"nodeType":"132","messageId":"133","endLine":115,"endColumn":15},{"ruleId":"111","severity":1,"message":"151","line":120,"column":7,"nodeType":"113","messageId":"114","endLine":120,"endColumn":10},{"ruleId":"111","severity":1,"message":"151","line":182,"column":7,"nodeType":"113","messageId":"114","endLine":182,"endColumn":10},{"ruleId":"130","severity":1,"message":"131","line":183,"column":18,"nodeType":"132","messageId":"133","endLine":183,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":183,"column":40,"nodeType":"132","messageId":"133","endLine":183,"endColumn":42},{"ruleId":"111","severity":1,"message":"152","line":212,"column":13,"nodeType":"113","messageId":"114","endLine":212,"endColumn":18},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'NavBar' is defined but never used.","'Main' is defined but never used.","'SecondPage' is defined but never used.","'Third' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'getTokenBalance' is defined but never used.","'getEthBalance' is defined but never used.","'wethAbi' is assigned a value but never used.","'maskAbi' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Cards' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'connect' is defined but never used.","'inputREValue' is assigned a value but never used.","'isCancelled' is assigned a value but never used.","'aa' is assigned a value but never used.","'liquidity' is assigned a value but never used.","'removeLiquidity' is assigned a value but never used.","'onHandleChangeREAmount' is assigned a value but never used.","'rgx' is assigned a value but never used.","'toStr' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]